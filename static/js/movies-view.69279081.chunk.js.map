{"version":3,"file":"static/js/movies-view.69279081.chunk.js","mappings":"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","sources":["UI/AccentButton.jsx","UI/section.jsx","components/MoviesGallery/MovieCard/MovieCard.jsx","components/MoviesGallery/MoviesGallery.jsx","components/SearchBar/SearchBar.jsx","pages/MoviesPage/MoviesPage.jsx","utils/filteredGenres.jsx","utils/mappedMoviesList.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst AccentButton = ({ icon, title, onClick, type }) => (\n  <Button type={type} onClick={onClick}>\n    {title} {icon}\n  </Button>\n);\n\nconst Button = styled.button`\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${(p) => p.theme.altBG};\n  color: ${(p) => p.theme.mainColor};\n  font-family: ${(p) => p.theme.mainFF}, sans-serif;\n  transition: background-color ${(p) => p.theme.transition},\n    color ${(p) => p.theme.transition};\n  &:hover {\n    cursor: pointer;\n    color: ${(p) => p.theme.mainColor};\n    background-color: ${(p) => p.theme.accentColor};\n  }\n`;\nAccentButton.propTypes = {\n  title: PropTypes.string,\n  onClick: PropTypes.func,\n  type: PropTypes.string.isRequired,\n};\n\nexport default AccentButton;\n","import styled from \"styled-components\";\nimport { breakpoints } from \"utils/breakpoints\";\n\nconst Section = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n\nconst Wrapper = styled.section`\n  width: 100%;\n  padding: 32px 0 40px;\n  @media ${breakpoints.tablet} {\n    padding: 32px 0 60px;\n  }\n`;\n\nexport default Section;\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { breakpoints } from \"utils/breakpoints\";\nimport NoPoster from \"UI/movie-poster-coming-soon.jpg\";\n\nconst MovieCard = ({ title, posterPath, genres }) => (\n  <Wrapper>\n    <Thumb>\n      {posterPath !== null ? (\n        <Picture\n          alt={title}\n          loading=\"lazy\"\n          src={`https://themoviedb.org/t/p/w342${posterPath}`}\n        />\n      ) : (\n        <Picture alt={title} loading=\"lazy\" src={NoPoster} />\n      )}\n    </Thumb>\n\n    <Title>{title}</Title>\n    <Genres>{genres}</Genres>\n  </Wrapper>\n);\n\nconst Wrapper = styled.div`\n  border-radius: 5px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  width: 260px;\n  transform: scale(1);\n  transition: transform ${(p) => p.theme.transition};\n  @media ${breakpoints.tablet} {\n    width: 300px;\n  }\n\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0px 0px 8px 6px ${(p) => p.theme.accentColor};\n    transform: scale(1.04);\n  }\n`;\n\nconst Thumb = styled.div`\n  margin-bottom: 5px;\n\n  background-color: ${(p) => p.theme.skeletonFrom};\n`;\n\nconst Picture = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 400px;\n  border-radius: 5px;\n`;\n\nconst Title = styled.h3`\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 12px / 14px;\n  color: ${(p) => p.theme.accentBG};\n`;\n\nconst Genres = styled.p`\n  margin-top: 4px;\n  font-size: 12px;\n  line-height: 12px / 14px;\n  font-weight: 500;\n  color: ${(p) => p.theme.accentColor};\n`;\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  posterPath: PropTypes.string,\n  genres: PropTypes.string,\n};\n\nexport default MovieCard;\n","import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { breakpoints } from \"utils/breakpoints\";\n\nimport MovieCard from \"./MovieCard\";\n\nconst MoviesGallery = ({ list }) => {\n  const location = useLocation();\n\n  const renderGallery = () =>\n    list.map((item) => (\n      <Item key={item.id}>\n        <Link to={`/movies/${item.id}`} state={{ from: location }}>\n          <MovieCard {...item} />\n        </Link>\n      </Item>\n    ));\n\n  return <Wrapper>{list.length ? renderGallery() : null}</Wrapper>;\n};\n\nconst Wrapper = styled.ul`\n  display: grid;\n  gap: 25px;\n  grid-template-columns: 1fr;\n  @media ${breakpoints.tablet} {\n    grid-template-columns: 1fr 1fr;\n  }\n  @media ${breakpoints.laptop} {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n\nconst Item = styled.li`\n  width: 100px;\n`;\n\nMoviesGallery.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      posterPath: PropTypes.string,\n      genres: PropTypes.string,\n    })\n  ),\n};\n\nexport default MoviesGallery;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\nimport AccentButton from \"UI/AccentButton\";\n\nconst SearchForm = ({ onSearch }) => {\n  const [value, setValue] = useState(\"\");\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n\n    const query = value.trim();\n    if (query === \"\") {\n      Notify.failure(\"Please enter something\", {\n        fontSize: \"18px\",\n        cssAnimationStyle: \"from-right\",\n      });\n    }\n    if (query) {\n      onSearch(query);\n      setValue(\"\");\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSearch}>\n      <Input\n        value={value}\n        placeholder=\"Search for movies\"\n        onChange={(e) => setValue(e.target.value)}\n      />\n      <AccentButton title=\"Find\" type=\"submit\" />\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nconst Input = styled.input`\n  width: 340px;\n  margin-right: 10px;\n\n  background-color: transparent;\n  padding-left: 20px;\n  font-size: 20px;\n  border: none;\n  border-bottom: 2px solid ${(p) => p.theme.accentColor};\n  color: ${(p) => p.theme.accentBG};\n`;\n\nexport default SearchForm;\n","import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { fetchSearch } from \"Services/movieApi\";\nimport MoviesGallery from \"components/MoviesGallery\";\nimport Container from \"UI/container\";\nimport Section from \"UI/section\";\nimport SearchBar from \"components/SearchBar\";\nimport { Loading } from \"notiflix/build/notiflix-loading-aio\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\nimport { mappedMovies } from \"utils/mappedMoviesList\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst PARAM_QUERY = \"query\";\n\nconst MoviePage = ({ genresList }) => {\n  const [moviesList, setMoviesList] = useState([]);\n  const [queryParam, setQueryParam] = useSearchParams({});\n\n  useEffect(() => {\n    const query = queryParam.get(PARAM_QUERY);\n\n    if (query) handleSearch(query);\n  }, []);\n\n  const handleSearch = (query) => {\n    setQueryParam({ [PARAM_QUERY]: query });\n\n    Loading.standard(\"Loading...\", {\n      backgroundColor: \"rgba(0,0,0,0.8)\",\n      svgSize: \"100px\",\n      svgColor: \"#F66B0E\",\n      messageFontSize: \"18px\",\n      messageColor: \"#F66B0E\",\n    });\n    fetchSearch(query)\n      .then((data) => {\n        if (data.results.length === 0) {\n          Notify.failure(\"Sorry nothing found on your query\", {\n            fontSize: \"18px\",\n            cssAnimationStyle: \"from-right\",\n          });\n        }\n\n        setMoviesList(mappedMovies(genresList, data.results));\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n    Loading.remove();\n  };\n\n  return (\n    <Section>\n      <Container>\n        <SearchBar onSearch={handleSearch} />\n      </Container>\n\n      <Container>\n        <MoviesGallery list={moviesList} />\n      </Container>\n    </Section>\n  );\n};\n\nMoviePage.propTypes = {\n  genresList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviePage;\n","export const filteredGenres = (genresList, IDs) => {\n  if (genresList.length && IDs) {\n    const str = IDs.map((ID) => genresList.find((genre) => genre.id === ID))\n      .map((item) => item?.name)\n      .join(\", \");\n\n    if (str) return str;\n  }\n\n  return \"\";\n};\n","import { filteredGenres } from \"utils/filteredGenres\";\n\nexport const mappedMovies = (genresList, list) =>\n  list.map((item) => ({\n    id: item.id,\n    title: item.title,\n    posterPath: item.poster_path,\n    genres: filteredGenres(genresList, item.genre_ids),\n  }));\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["Button","styled","p","theme","altBG","mainColor","mainFF","transition","accentColor","icon","title","onClick","type","Wrapper","breakpoints","children","Thumb","skeletonFrom","Picture","Title","accentBG","Genres","posterPath","genres","alt","loading","src","NoPoster","Item","list","location","useLocation","length","map","item","to","id","state","from","Form","Input","onSearch","useState","value","setValue","onSubmit","e","preventDefault","query","trim","Notify","fontSize","cssAnimationStyle","placeholder","onChange","target","AccentButton","PARAM_QUERY","genresList","moviesList","setMoviesList","useSearchParams","queryParam","setQueryParam","useEffect","get","handleSearch","Loading","backgroundColor","svgSize","svgColor","messageFontSize","messageColor","fetchSearch","then","data","results","mappedMovies","catch","err","console","error","SearchBar","MoviesGallery","filteredGenres","IDs","str","ID","find","genre","name","join","poster_path","genre_ids","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}